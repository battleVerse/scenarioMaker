% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interp_ellipse.R
\name{interp_ellipse}
\alias{interp_ellipse}
\title{Interpolate points on an ellipsoidal Earth (WGS84)}
\usage{
interp_ellipse(dataSet, interpTimes, returnType = "lla")
}
\arguments{
\item{dataSet}{data frame to be interpolated. Must contain lat, lon, alt, and time columns}

\item{interpTimes}{vector of times to interpolate to.}

\item{returnType}{(default = "lla") type of output. "lla" returns interpolated lat, lon, and alt values. "xyz" returns interpolated cartesian values (with the origin at the center of the Earth and z in the direction of the north pole).}
}
\value{
A data frame with the same number of observations as the length of interpTimes and columns of either lat/lon/alt on WGS84 Earth or x/y/z cartesian coordinates (with origin at the center of Earth), depending on the returnType parameter.
}
\description{
The times when the sensor recorded a track are not necessarily the same times that truth data exists for each target. Therefore, to calculate the distance between tracks and targets at each time there was a sensor track we need to interpolate the target positions to those times.

interp_ellipse() interpolates lat, lon, and altitude on a spheroidal Earth (WGS84). For times in interpTimes outside the time range in dataSet those times are coerced into the range. Therefore, there will never be extrapolation. This can lead to small effects before target data exists and after targets are destroyed, so the user should be careful.

This function is called by target_track_distance() and target_ownship_distance(), however it can also be used on its own.
}
